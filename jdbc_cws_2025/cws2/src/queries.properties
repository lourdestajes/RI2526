# TCONTRACTS
TCONTRACTS_ADD = INSERT INTO TContracts(id, startDate, endDate, mechanic_id, professionalgroup_id, contracttype_id, \
	annualBaseSalary, settlement, taxRate, state, createdAt, updatedAt, version) \
	values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 1) 
TCONTRACTS_REMOVE = delete from TContracts where id = ?
TCONTRACTS_FINDBYMECHANIC = SELECT * FROM TContracts WHERE mechanic_id = ?
TCONTRACTS_FINDBYCONTRACTYYPEID = SELECT * FROM TContracts WHERE contractType_id = ?
TCONTRACTS_FINDBYPROFESSIONALGROUP = SELECT * FROM TContracts WHERE professionalgroup_id = ?
TCONTRACTS_FINDINFORCEBYMECHANICID = SELECT * FROM TContracts WHERE state = 'IN_FORCE' and mechanic_id = ?
TCONTRACTS_UPDATE = update TContracts set version = version + 1, \
    annualBaseSalary = ?, \
    endDate = ?, \
    settlement = ?, \
    taxRate = ?, \
    state = ?, \
    updatedat = ? \
 where id = ?
TCONTRACTS_FINDBYID = select * from TContracts where id = ?
TCONTRACTS_FINDALL = select * from TContracts 
TCONTRACTS_FINDALLINFORCE=select * from TContracts where state='IN_FORCE'
TCONTRACTS_FINDALLINFORCETHISMONTH = select * from TContracts where state='IN_FORCE' \
			OR endDate>=?

# TCONTRACTTYPES
TCONTRACTTYPES_ADD = insert into TContractTypes(id, name, compensationdaysperyear, createdat, updatedat, version) values (?, ?, ?, ?, ?, 1)
TCONTRACTTYPES_FINDBYNAME = SELECT * FROM TContractTypes WHERE name = ?
TCONTRACTTYPES_UPDATE = update TContractTypes set compensationdaysperyear = ?, updatedat = ?, version=version+1 where id = ?
TCONTRACTTYPES_FINDALL = SELECT * FROM TContractTypes;
TCONTRACTTYPES_FINDBYID = SELECT * FROM TContractTypes WHERE id = ?
TCONTRACTTYPES_REMOVE = delete from TContractTypes where id = ?

# TINTERVENTIONS
TINTERVENTIONS_FINDBYMECHANICID = select * from TInterventions where mechanic_id = ? 
TINTERVENTIONS_FINDBYMECHANICIDBETWEENDATES  = select * from TInterventions where mechanic_id = ? and date between ? and ?

# TINVOICES
TINVOICES_FIND_UNPAID_BY_VEHICLE = select * from TInvoices where state = 'UNPAID' and id in \
 ( select invoice_id from TWorkOrders where vehicle_id = ? )

# TMECHANICS
TMECHANICS_FINDBYID = select * from TMechanics where id = ?
TMECHANICS_FINDBYNIF = SELECT * FROM TMECHANICS WHERE NIF = ?
TMECHANICS_ADD = insert into TMechanics(id, nif, name, surname, createdAt, updatedAt, version) values (?, ?, ?, ?, ?, ?, 1)
TMECHANICS_REMOVE = delete from TMechanics where id = ?
TMECHANICS_FINDALL = select * from TMechanics
TMECHANICS_UPDATE = update TMechanics set name = ?, surname = ?, updatedat = ?, version=version+1 where id = ?
TMECHANICS_FINDBYWAGE = select * from TMechanics m join TContracts c on m.id = c.id and c.annualBaseSalary >= ?  

# TPAYROLLS
TPAYROLLS_ADD = insert into TPayrolls \
	(id, version, entitystate, contract_id, date, baseSalary, extraSalary, productivityEarning, \
	 trienniumEarning, taxDeduction, nicDeduction, createdat, updatedat) \
	values (?, 1, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) 		
TPAYROLLS_FINDBYCONTRACT = SELECT * FROM TPayrolls where contract_id = ?
TPAYROLLS_FINDLASTFORCONTRACT = SELECT * FROM TPayrolls where contract_id = ? AND \
	date >= TRUNC(ADD_MONTHS(CURRENT_DATE, -1), 'MM') AND \
	date <  TRUNC(CURRENT_DATE, 'MM')
TPAYROLLS_FINDLASTMONTHPAYROLLS = SELECT * FROM TPAYROLLS WHERE \
	date >= TRUNC(ADD_MONTHS(CURRENT_DATE, -1), 'MM') AND \
	date <  TRUNC(CURRENT_DATE, 'MM')
TPAYROLLS_REMOVE = DELETE FROM TPayrolls WHERE id = ?
TPAYROLLS_FINDALL = select * from TPayrolls
TPAYROLLS_FINDBYID = select * from TPayrolls where id = ?
TPAYROLLS_FINDBYCONTRACTANDDATE = select * from TPayrolls where contract_id = ? and date = ?

# TPROFESSIONALGROUPS
TPROFESSIONALGROUPS_ADD = insert into TPROFESSIONALGROUPS(id, name, trienniumPayment, productivityRate, createdat, updatedat, version) values (?, ?, ?, ?, ?, ?, 1)
TPROFESSIONALGROUPS_FINDBYID = select * from TPROFESSIONALGROUPS where id = ?
TPROFESSIONALGROUPS_FINDBYNAME = select * from TPROFESSIONALGROUPS where name = ?
TPROFESSIONALGROUPS_FINDALL = SELECT * FROM TPROFESSIONALGROUPS
TPROFESSIONALGROUPS_REMOVE = delete from TPROFESSIONALGROUPS where id = ?
TPROFESSIONALGROUPS_UPDATE = update TPROFESSIONALGROUPS set trienniumPayment = ? \
	, productivityRate = ? \
	, updatedat = ? \
	, version = version + 1 \
	where id = ?
# TINVOICES
TINVOICES_GETNEXTINVOICENUMBER = select max(number) from TInvoices
TINVOICES_ADD = insert into TInvoices(id, number, date, vat, amount, state, createdat, updatedat, version) values(?, ?, ?, ?, ?, ?, ?, ?, 1)


# TSPAREPARTS
TSPAREPARTS_ADD = insert into tspareparts(id, code, description, maxstock, minstock, price, stock) values (?, ?, ?, ?, ?, ?, ?)
TSPAREPARTS_REMOVE = delete from tspareparts where id = ?
TSPAREPARTS_ = update tspareparts set code = ?, description = ?, maxstock = ?, minstock = ?, price = ?, stock = ?, version = version + 1 where id = ?
TSPAREPARTS_FINDALL = select  * from tspareparts
TSPAREPARTS_FINDBYID = select  * from tspareparts where id = ?
TSPAREPARTS_FINDBYCODE = select  * from tspareparts where code = ?
TSPAREPARTS_FINDREPORTBYCODE = select sp.*,  sum(s.quantity) as tatalUnitsSold from Tspareparts sp left outer join tsubstitutions s on sp.id = s.sparepart_id where code = ? group by sp.id
TSPAREPARTS_FINDREPORTBYDESCRIPTION = select sp.*,  sum(s.quantity) as tatalUnitsSold from Tspareparts sp left outer join tsubstitutions s on sp.id = s.sparepart_id where lower(description) like ? group by sp.id
TSPAREPARTS_FINDREPORTUNDERSTOCK = select s.*, count(s.price) as tatalUnitsSold from tSpareParts s where s.stock < s.minStock and s.id not in (select ss.id from tOrders o, torderlines ol, tspareParts ss where o.id = ol.order_id and ss.id = ol.sparepart_id and o.state = 'PENDING') group by s.id

#TSUBSTITUTIONS
TSUBSTITUTIONS_FINDBYSPAREPARTID = select * from tsubstitutions where sparepart_id = ?

# TVEHICLES
TVEHICLES_FINDBYPLATE = SELECT * FROM TVEHICLES WHERE PLATENUMBER = ?

# TWORKORDERS
TWORKORDERS_FINDBYMECHANICID = select * from TWorkorders where mechanic_id = ? 
TWORKORDERS_FINDBYIDS = select * from TWorkOrders where id = ?
TWORKORDERS_FINDBYID = select * from TWorkOrders where id = ?
TWORKORDERS_UPDATE = update TWorkOrders set \
	version = version + 1, \
	vehicle_id = ?, \
	description = ?, \
	date = ?, \
	amount = ?, \
	state = ?, \
	mechanic_id = ?, \
	invoice_id = ? \
where id = ?
TWORKORDERS_FIND_NOT_INVOICED_BY_CLIENT_NIF = select * \
from TWorkorders w \
	inner join TVehicles v on w.vehicle_id = v.id \
	inner join TClients c on v.client_id = c.id \
where c.nif = ? \
	and w.state = 'FINISHED'